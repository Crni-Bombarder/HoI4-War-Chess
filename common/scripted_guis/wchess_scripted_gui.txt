@B_KING   = 1
@W_KING   = 2
@B_QUEEN  = 3
@W_QUEEN  = 4
@B_BISHOP = 5
@W_BISHOP = 6
@B_ROOK   = 7
@W_ROOK   = 8
@B_KNIGHT = 9
@W_KNIGHT = 10
@B_PAWN   = 11
@W_PAWN   = 12
@EMPTY    = 13

@ID_KING   = 0
@ID_QUEEN  = 1
@ID_BISHOP = 2
@ID_ROOK   = 3
@ID_KNIGHT = 4
@ID_PAWN   = 5

@BLACK = 0
@WHITE = 1

@ACTIVATE = 1
@DEACTIVATE = 2

@S_SELECTION      = 0
@S_MOVE           = 1
@S_PAWN_PROMOTION = 2

@ID_MOVE_NONE = 0
@ID_MOVE_RIGHT = 1
@ID_MOVE_LEFT = 2
@ID_MOVE_UP = 3
@ID_MOVE_DOWN = 4
@ID_MOVE_UPRIGHT = 5
@ID_MOVE_UPLEFT = 6
@ID_MOVE_DOWNRIGHT = 7
@ID_MOVE_DOWNLEFT = 8

scripted_gui = {
    wchess_scripted_gui_board = {
        window_name = "wchess_gui_board"

        context_type = player_context

        visible = {
            has_variable = wchess_start_game
        }

        dynamic_lists = {
            wchess_grid_pieces = {
                array = wchess_pieces_array
                change_scope = no
                entry_container = wchess_piece_cell
            }

            wchess_grid_highlights = {
                array = wchess_highlights_array
                change_scope = no
                entry_container = wchess_highlight_cell
            }

            wchess_grid_halochecks = {
                array = wchess_halochecks_array
                change_scope = no
                entry_container = wchess_halocheck_cell
            }
        }

        effects = {
            wchess_piece_tile_click = {

                if = {
                    limit = {
                        check_variable = {wchess_game_turn = 1}
                    }

                    # State : Piece / Pawn selection
                    if = {
                        limit = {
                            check_variable = {
                                wchess_play_state = @S_SELECTION
                            }
                        }

                        if = {
                            # Select one of your piece
                            limit = {
                                check_variable = {
                                    var = wchess_pieces_array^i
                                    value = @EMPTY
                                    compare = not_equals
                                }
                                set_temp_variable = {
                                    temp_wchess_check_color_piece = wchess_pieces_array^i
                                }
                                subtract_from_temp_variable = {temp_wchess_check_color_piece = 1}
                                modulo_temp_variable = {temp_wchess_check_color_piece = 2}
                                check_variable = {
                                    temp_wchess_check_color_piece = wchess_color
                                }
                            }

                            clear_temp_array = temp_wchess_piece_array
                            resize_temp_array = {
                                array = temp_wchess_piece_array
                                value = 0
                                size = 64
                            }
                            for_each_loop = {
                                array = wchess_pieces_array
                                value = val
                                index = iter
                                set_temp_variable = {temp_wchess_piece_array^iter = val}
                            }
                            # Get moves for the piece
                            clear_temp_array = temp_wchess_highlights_array
                            resize_temp_array = {
                                array = temp_wchess_highlights_array
                                value = @DEACTIVATE
                                size = 64
                            }
                            set_temp_variable = {temp_wchess_id = i}
                            set_temp_variable = {temp_wchess_inc_allies = 0}
                            set_temp_variable = {temp_wchess_color = wchess_color}
                            if = {
                                limit = {
                                    check_variable = {
                                        var = wchess_en_passant
                                        value = -1
                                        compare = not_equals
                                    }
                                }
                                set_temp_variable = {temp_wchess_en_passant = wchess_en_passant}
                            }
                            set_temp_variable = {temp_wchess_check_en = @ACTIVATE}
                            wchess_get_piece_moves = yes
                            clear_temp_array = temp_wchess_possible_moves
                            for_each_loop = {
                                    array = temp_wchess_highlights_array
                                    value = val
                                    index = iter
                                    set_variable = {temp_wchess_possible_moves^iter = val}
                                }

                            # Get pinned pieces
                            set_temp_variable = {temp_wchess_color = wchess_color}
                            clear_temp_array = temp_wchess_pinned_tiles_array
                            resize_temp_array = {
                                array = temp_wchess_pinned_tiles_array
                                value = @ID_MOVE_NONE
                                size = 64
                            }
                            clear_temp_array = temp_wchess_pinned_direction
                            resize_temp_array = {
                                array = temp_wchess_pinned_direction
                                value = @DEACTIVATE
                                size = 9
                            }
                            wchess_get_pinned_pieces = yes

                            if = {
                                limit = {
                                    set_temp_variable = {
                                        temp_wchess_pin_index = temp_wchess_pinned_tiles_array^i
                                    }
                                    check_variable = {
                                        temp_wchess_pinned_direction^temp_wchess_pin_index = @ACTIVATE
                                    }
                                }

                                for_each_loop = {
                                    array = wchess_highlights_array
                                    value = val
                                    index = iter

                                    if = {
                                        limit = {
                                            check_variable = {
                                                temp_wchess_pinned_tiles_array^iter = temp_wchess_pin_index
                                            }
                                        }
                                        set_variable = {wchess_highlights_array^iter = temp_wchess_possible_moves^iter}
                                    }
                                }

                            } else = {
                                for_each_loop = {
                                    array = wchess_highlights_array
                                    value = val
                                    index = iter
                                    set_variable = {wchess_highlights_array^iter = temp_wchess_possible_moves^iter}
                                }
                            }

                            # Castling logic
                            if = {
                                limit = {
                                    set_temp_variable    = {temp_wchess_piece_type = v}
                                    subtract_from_temp_variable = {temp_wchess_piece_type = 1}
                                    divide_temp_variable = {temp_wchess_piece_type = 2}
                                    add_to_temp_variable = {temp_wchess_piece_type = -0.5}
                                    clamp_temp_variable = {
                                        var = temp_wchess_piece_type
                                        min = 0
                                        max = 6
                                    }
                                    round_temp_variable = temp_wchess_piece_type
                                    check_variable = {
                                        temp_wchess_piece_type = @ID_KING
                                    }
                                    check_variable = {
                                        wchess_king_moved = 0
                                    }
                                }
                                set_temp_variable = {temp_wchess_color = wchess_opponent_color}
                                wchess_get_attacked_tiles = yes

                                # Castling queen side
                                set_temp_variable = {temp_wchess_castling_index = 1}
                                if = {
                                    limit = {
                                        check_variable = {wchess_color = @WHITE}
                                    }
                                    set_temp_variable = {temp_wchess_castling_index = 57}
                                }

                                if = {
                                    limit = {
                                        check_variable = {
                                            wchess_left_rook_moved = 0
                                        }
                                        check_variable = {
                                            wchess_pieces_array^temp_wchess_castling_index = @EMPTY
                                        }
                                        add_to_temp_variable = {temp_wchess_castling_index = 1}
                                        check_variable = {
                                            wchess_pieces_array^temp_wchess_castling_index = @EMPTY
                                        }
                                        check_variable = {
                                            temp_wchess_attacked_array^temp_wchess_castling_index = 0
                                        }
                                        add_to_temp_variable = {temp_wchess_castling_index = 1}
                                        check_variable = {
                                            wchess_pieces_array^temp_wchess_castling_index = @EMPTY
                                        }
                                        check_variable = {
                                            temp_wchess_attacked_array^temp_wchess_castling_index = 0
                                        }
                                        add_to_temp_variable = {temp_wchess_castling_index = 1}
                                        check_variable = {
                                            temp_wchess_attacked_array^temp_wchess_castling_index = 0
                                        }
                                    }
                                    subtract_from_temp_variable = {temp_wchess_castling_index = 4}
                                    set_variable = {wchess_highlights_array^temp_wchess_castling_index = @ACTIVATE}
                                }

                                # Castling king side
                                set_temp_variable = {temp_wchess_castling_index = 6}
                                if = {
                                    limit = {
                                        check_variable = {wchess_color = @WHITE}
                                    }
                                    set_temp_variable = {temp_wchess_castling_index = 62}
                                }

                                if = {
                                    limit = {
                                        check_variable = {
                                            wchess_right_rook_moved = 0
                                        }
                                        check_variable = {
                                            wchess_pieces_array^temp_wchess_castling_index = @EMPTY
                                        }
                                        check_variable = {
                                            temp_wchess_attacked_array^temp_wchess_castling_index = 0
                                        }
                                        subtract_from_temp_variable = {temp_wchess_castling_index = 1}
                                        check_variable = {
                                            wchess_pieces_array^temp_wchess_castling_index = @EMPTY
                                        }
                                        check_variable = {
                                            temp_wchess_attacked_array^temp_wchess_castling_index = 0
                                        }
                                        subtract_from_temp_variable = {temp_wchess_castling_index = 1}
                                        check_variable = {
                                            temp_wchess_attacked_array^temp_wchess_castling_index = 0
                                        }
                                    }
                                    add_to_temp_variable = {temp_wchess_castling_index = 3}
                                    set_variable = {wchess_highlights_array^temp_wchess_castling_index = @ACTIVATE}
                                }
                            }

                            set_variable = {wchess_selected_id = i}
                            set_variable = {wchess_play_state  = @S_MOVE}

                            # If in check, filter the moves
                            if = {
                                limit = {
                                    check_variable = {wchess_check_piece_id > -1}
                                    # The king filter his own moves
                                    NOT = {
                                        OR = {
                                            check_variable = {v = @B_KING}
                                            check_variable = {v = @W_KING}
                                        }
                                    }
                                }

                                set_temp_variable = {
                                    temp_wchess_check_piece_value = wchess_pieces_array^wchess_check_piece_id
                                }
                                set_temp_variable = {
                                    temp_wchess_check_direction = temp_wchess_pinned_tiles_array^wchess_check_piece_id
                                }
                                for_each_loop  = {
                                    array = temp_wchess_pinned_tiles_array
                                    value = tiles_pinned_direction
                                    index = tiles_index

                                    if = {
                                        limit = {
                                            check_variable = {
                                                var = iter
                                                value = wchess_check_piece_id
                                                compare = not_equals
                                            }
                                            OR = {
                                                check_variable = {
                                                    var = tiles_pinned_direction
                                                    value = temp_wchess_check_direction
                                                    compare = not_equals
                                                }
                                                check_variable = {temp_wchess_check_piece_value = @B_KNIGHT}
                                                check_variable = {temp_wchess_check_piece_value = @W_KNIGHT}
                                            }
                                        }

                                        set_variable = {wchess_highlights_array^tiles_index = @DEACTIVATE}
                                    }
                                }
                            }

                            set_variable = {wchess_highlights_array^i = @ACTIVATE}
                        }
                    } else_if = {
                        limit = {
                            check_variable = {
                                wchess_play_state = @S_MOVE
                            }
                        }

                        if = {
                            # Deselect the piece
                            limit = {
                                check_variable = {
                                    wchess_selected_id = i
                                }
                            }
                            clear_variable = wchess_selected_id

                            set_variable = {wchess_play_state  = @S_SELECTION}
                            clear_array = wchess_highlights_array
                            resize_array = {
                                array = wchess_highlights_array
                                size = 64
                                value = @DEACTIVATE
                            }
                        } else_if = {
                            limit = {
                                check_variable = {
                                    wchess_highlights_array^i = @ACTIVATE
                                }
                            }

                             # Delete the passed pawn
                            if = {
                                limit = {
                                    set_temp_variable    = {temp_wchess_piece_type = wchess_pieces_array^wchess_selected_id}
                                    subtract_from_temp_variable = {temp_wchess_piece_type = 1}
                                    divide_temp_variable = {temp_wchess_piece_type = 2}
                                    add_to_temp_variable = {temp_wchess_piece_type = -0.5}
                                    clamp_temp_variable = {
                                        var = temp_wchess_piece_type
                                        min = 0
                                        max = 6
                                    }
                                    round_temp_variable  = temp_wchess_piece_type
                                    set_temp_variable = {temp_wchess_pawn_x = i}
                                    modulo_temp_variable = {temp_wchess_pawn_x = 8}
                                    check_variable = {temp_wchess_piece_type = @ID_PAWN}
                                    check_variable = {temp_wchess_pawn_x = wchess_en_passant}
                                }

                                set_temp_variable = {temp_wchess_en_passant_id = i}
                                if = {
                                    limit = {
                                        check_variable = {wchess_color = @BLACK}
                                    }

                                    add_to_temp_variable = {temp_wchess_en_passant_id = -8}
                                } else = {
                                    add_to_temp_variable = {temp_wchess_en_passant_id =  8}
                                }
                                set_variable = {wchess_pieces_array^temp_wchess_en_passant_id = @EMPTY}
                            }

                            # Flag for castling update
                            # King
                            if = {
                                limit = {
                                    set_temp_variable = {
                                        temp_wchess_piece_type = wchess_pieces_array^wchess_selected_id
                                    }
                                    subtract_from_temp_variable = {temp_wchess_piece_type = 1}
                                    divide_temp_variable = {temp_wchess_piece_type = 2}
                                    add_to_temp_variable = {temp_wchess_piece_type = -0.5}
                                    clamp_temp_variable = {
                                        var = temp_wchess_piece_type
                                        min = 0
                                        max = 6
                                    }
                                    round_temp_variable = temp_wchess_piece_type
                                    check_variable = {
                                        temp_wchess_piece_type = @ID_KING
                                    }
                                }

                                set_variable = {wchess_king_moved = 1}
                            }

                            # Rooks
                            if = {
                                limit = {
                                    set_temp_variable = {
                                        temp_wchess_piece_type = wchess_pieces_array^wchess_selected_id
                                    }
                                    subtract_from_temp_variable = {temp_wchess_piece_type = 1}
                                    divide_temp_variable = {temp_wchess_piece_type = 2}
                                    add_to_temp_variable = {temp_wchess_piece_type = -0.5}
                                    clamp_temp_variable = {
                                        var = temp_wchess_piece_type
                                        min = 0
                                        max = 6
                                    }
                                    round_temp_variable = temp_wchess_piece_type
                                    check_variable = {
                                        temp_wchess_piece_type = @ID_ROOK
                                    }
                                }

                                set_temp_variable = {temp_x = wchess_selected_id}
                                modulo_temp_variable = {temp_x = 8}
                                if = {
                                    limit = {
                                        check_variable = {temp_x = 0}
                                    }
                                    set_variable = {wchess_left_rook_moved = 1}
                                } else_if = {
                                    limit = {
                                        check_variable = {temp_x = 7}
                                    }
                                    set_variable = {wchess_right_rook_moved = 1}
                                }
                            }

                            # Castling
                            if = {
                                limit = {
                                    set_temp_variable = {
                                        temp_wchess_piece_type = wchess_pieces_array^wchess_selected_id
                                    }
                                    subtract_from_temp_variable = {temp_wchess_piece_type = 1}
                                    divide_temp_variable = {temp_wchess_piece_type = 2}
                                    add_to_temp_variable = {temp_wchess_piece_type = -0.5}
                                    clamp_temp_variable = {
                                        var = temp_wchess_piece_type
                                        min = 0
                                        max = 6
                                    }
                                    round_temp_variable = temp_wchess_piece_type
                                    check_variable = {
                                        temp_wchess_piece_type = @ID_KING
                                    }
                                    set_temp_variable    = {temp_wchess_piece_type = v}
                                    subtract_from_temp_variable = {temp_wchess_piece_type = 1}
                                    divide_temp_variable = {temp_wchess_piece_type = 2}
                                    add_to_temp_variable = {temp_wchess_piece_type = -0.5}
                                    clamp_temp_variable = {
                                        var = temp_wchess_piece_type
                                        min = 0
                                        max = 6
                                    }
                                    round_temp_variable = temp_wchess_piece_type
                                    check_variable = {
                                        temp_wchess_piece_type = @ID_ROOK
                                    }
                                }
                                
                                # Queen side
                                if = {
                                    limit = {
                                        check_variable = { wchess_selected_id > i}
                                    }

                                    set_temp_variable = {temp_wchess_index_castle_king = i}
                                    add_to_temp_variable = {temp_wchess_index_castle_king = 2}
                                    set_temp_variable = {
                                        temp_wchess_index_castle_rook = temp_wchess_index_castle_king
                                    }
                                    add_to_temp_variable = {temp_wchess_index_castle_rook = 1}

                                # King side
                                } else = {
                                    set_temp_variable = {temp_wchess_index_castle_king = i}
                                    add_to_temp_variable = {temp_wchess_index_castle_king = -1}
                                    set_temp_variable = {
                                        temp_wchess_index_castle_rook = temp_wchess_index_castle_king
                                    }
                                    add_to_temp_variable = {temp_wchess_index_castle_rook = -1}
                                }

                                # Castle
                                set_variable = {
                                    wchess_pieces_array^wchess_selected_id = @EMPTY
                                }
                                set_variable = {
                                    wchess_pieces_array^i = @EMPTY
                                }

                                if = {
                                    limit = {
                                        check_variable = {wchess_color = @BLACK}
                                    }

                                    set_variable = {
                                        wchess_pieces_array^temp_wchess_index_castle_rook = @B_ROOK
                                    }
                                    set_variable = {
                                        wchess_pieces_array^temp_wchess_index_castle_king = @B_KING
                                    }
                                } else = {
                                    set_variable = {
                                        wchess_pieces_array^temp_wchess_index_castle_rook = @W_ROOK
                                    }
                                    set_variable = {
                                        wchess_pieces_array^temp_wchess_index_castle_king = @W_KING
                                    }
                                }

                                set_variable = {
                                    wchess_king_moved = 1
                                }
                            } else = {
                                # Normal move
                                set_variable = {
                                    wchess_pieces_array^i = wchess_pieces_array^wchess_selected_id
                                }
                                set_variable = {
                                    wchess_pieces_array^wchess_selected_id = @EMPTY
                                }
                            }

                            
                            clear_array = wchess_highlights_array
                            resize_array = {
                                array = wchess_highlights_array
                                size = 64
                                value = @DEACTIVATE
                            }

                            if = {
                                limit = {
                                    OR = {
                                        AND = {
                                            check_variable = {wchess_color = @WHITE}
                                            check_variable = {i < 8}
                                        }
                                        AND = {
                                            check_variable = {wchess_color = @BLACK}
                                            check_variable = {i > 55}
                                        }
                                    }
                                    OR = {
                                        check_variable = {wchess_pieces_array^i = @B_PAWN}
                                        check_variable = {wchess_pieces_array^i = @W_PAWN}
                                    }
                                }

                                set_variable = {wchess_display_promote_pawn = @ACTIVATE}
                                set_variable = {wchess_pawn_promotion_id = i}
                                set_temp_variable = {temp_wchess_position_id = i}
                                modulo_temp_variable = {temp_wchess_position_id = 8}
                                if = {
                                    limit = {
                                        check_variable = {wchess_color = @BLACK}
                                    }

                                    add_to_temp_variable = {temp_wchess_position_id = 8}
                                }

                                wchess_set_promote_pawn_interface_position = yes
                                set_variable = {wchess_play_state  = @S_PAWN_PROMOTION}
                            } else = {
                                set_variable = {wchess_play_state  = @S_SELECTION}
                                wchess_switch_turn = yes
                            }

                            # Clear own en passant available
                            set_variable = {wchess_en_passant = -1}
                            # En passant flag for the opponent
                            if = {
                                limit = {
                                    set_temp_variable = {
                                        temp_wchess_en_passant_y_offset = i
                                    }
                                    subtract_from_temp_variable = {
                                        temp_wchess_en_passant_y_offset = wchess_selected_id
                                    }
                                    OR = {
                                        check_variable = {
                                            temp_wchess_en_passant_y_offset = 16
                                        }
                                        check_variable = {
                                            temp_wchess_en_passant_y_offset = -16
                                        }
                                    }
                                    OR = {
                                        check_variable = {wchess_pieces_array^i = @B_PAWN}
                                        check_variable = {wchess_pieces_array^i = @W_PAWN}
                                    }
                                }

                                set_temp_variable = {temp_wchess_en_passant_id = wchess_selected_id}
                                modulo_temp_variable = {temp_wchess_en_passant_id = 8}
                                var:wchess_opponent = {
                                    set_variable = {
                                        wchess_en_passant = temp_wchess_en_passant_id
                                    }
                                }
                            }
                        }
                    }
                }
            }

            wchess_promote_queen_click = {
                if = {
                    limit = {
                        check_variable = {
                            wchess_play_state = @S_PAWN_PROMOTION
                        }
                    }

                    if = {
                        limit = {
                            check_variable = {wchess_color = @WHITE}
                        }

                        set_variable = {
                            wchess_pieces_array^wchess_pawn_promotion_id = @W_QUEEN
                        }
                    } else = {
                        set_variable = {
                            wchess_pieces_array^wchess_pawn_promotion_id = @B_QUEEN
                        }
                    }

                    set_variable = {wchess_play_state = @S_SELECTION}
                    set_variable = {wchess_display_promote_pawn = @DEACTIVATE}

                    wchess_switch_turn = yes
                }
            }

            wchess_promote_knight_click = {
                if = {
                    limit = {
                        check_variable = {
                            wchess_play_state = @S_PAWN_PROMOTION
                        }
                    }

                    if = {
                        limit = {
                            check_variable = {wchess_color = @WHITE}
                        }

                        set_variable = {
                            wchess_pieces_array^wchess_pawn_promotion_id = @W_KNIGHT
                        }
                    } else = {
                        set_variable = {
                            wchess_pieces_array^wchess_pawn_promotion_id = @B_KNIGHT
                        }
                    }

                    set_variable = {wchess_play_state = @S_SELECTION}
                    set_variable = {wchess_display_promote_pawn = @DEACTIVATE}

                    wchess_switch_turn = yes
                }
            }

            wchess_promote_rook_click = {
                if = {
                    limit = {
                        check_variable = {
                            wchess_play_state = @S_PAWN_PROMOTION
                        }
                    }

                    if = {
                        limit = {
                            check_variable = {wchess_color = @WHITE}
                        }

                        set_variable = {
                            wchess_pieces_array^wchess_pawn_promotion_id = @W_ROOK
                        }
                    } else = {
                        set_variable = {
                            wchess_pieces_array^wchess_pawn_promotion_id = @B_ROOK
                        }
                    }

                    set_variable = {wchess_play_state = @S_SELECTION}
                    set_variable = {wchess_display_promote_pawn = @DEACTIVATE}

                    wchess_switch_turn = yes
                }
            }

            wchess_promote_bishop_click = {
                if = {
                    limit = {
                        check_variable = {
                            wchess_play_state = @S_PAWN_PROMOTION
                        }
                    }

                    if = {
                        limit = {
                            check_variable = {wchess_color = @WHITE}
                        }

                        set_variable = {
                            wchess_pieces_array^wchess_pawn_promotion_id = @W_BISHOP
                        }
                    } else = {
                        set_variable = {
                            wchess_pieces_array^wchess_pawn_promotion_id = @B_BISHOP
                        }
                    }

                    set_variable = {wchess_play_state = @S_SELECTION}
                    set_variable = {wchess_display_promote_pawn = @DEACTIVATE}

                    wchess_switch_turn = yes
                }
            }
        }

        properties = {
            wchess_piece_tile = {
                frame = v
            }

            wchess_highlight_tile = {
                frame = v
            }

            wchess_halocheck_tile = {
                frame = v
            }

            wchess_pawn_promote_background = {
                x = wchess_promote_pawn_background_pos_x
                y = wchess_promote_pawn_background_pos_y
            }

            wchess_promote_queen = {
                x = wchess_promote_pawn_queen_pos_x
                y = wchess_promote_pawn_queen_pos_y
                frame = wchess_promote_queen_frame
            }
            wchess_promote_knight = {
                x = wchess_promote_pawn_knight_pos_x
                y = wchess_promote_pawn_knight_pos_y
                frame = wchess_promote_knight_frame
            }
            wchess_promote_rook = {
                x = wchess_promote_pawn_rook_pos_x
                y = wchess_promote_pawn_rook_pos_y
                frame = wchess_promote_rook_frame
            }
            wchess_promote_bishop = {
                x = wchess_promote_pawn_bishop_pos_x
                y = wchess_promote_pawn_bishop_pos_y
                frame = wchess_promote_bishop_frame
            }
        }

        triggers = {
            wchess_pawn_promote_background_visible = {
                check_variable = {wchess_display_promote_pawn = @ACTIVATE}
            }

            wchess_promote_queen_visible = {
                check_variable = {wchess_display_promote_pawn = @ACTIVATE}
            }

            wchess_promote_knight_visible = {
                check_variable = {wchess_display_promote_pawn = @ACTIVATE}
            }

            wchess_promote_rook_visible = {
                check_variable = {wchess_display_promote_pawn = @ACTIVATE}
            }

            wchess_promote_bishop_visible = {
                check_variable = {wchess_display_promote_pawn = @ACTIVATE}
            }
        }
    }

    # ########################################## #
    # ################# DEBUG ################## #
    # ########################################## #

    wchess_scripted_gui_debug = {
        window_name = "wchess_debug_interface"

        context_type = player_context

        visible = {
            has_variable = wchess_start_game
        }

        effects = {

            wchess_debug_random_tile_array_click = {
                log = "Random value to array wchess_pieces_array"
                resize_array = {
                    array = wchess_pieces_array
                    size = 64
                    value = 2
                }
                for_each_loop = {
                    array = wchess_pieces_array
                    index = i
                    set_temp_variable = {temp_random = random}
                    multiply_temp_variable = {
                        var = temp_random
                        value = 13.5
                    }
                    round_temp_variable = temp_random
                    clamp_temp_variable = {
                        var = temp_random
                        min = 0
                        max = 13
                    }

                    set_variable = {wchess_pieces_array^i = temp_random}
                }
            }

            wchess_debug_clean_tile_array_click = {
                log = "Clearing wchess_pieces_array"
                clear_array = wchess_pieces_array
            }

            wchess_debug_add_highlight_array_click = {
                wchess_create_board = yes
                set_variable = {wchess_en_passant = -1}
                set_variable = {wchess_king_moved = 0}
                set_variable = {wchess_left_rook_moved = 0}
                set_variable = {wchess_right_rook_moved = 0}
            }

            wchess_debug_clean_highlight_array_click = {
                log = "Clearing wchess_highlights_array"
                clear_array = wchess_highlights_array
                resize_array = {
                    array = wchess_highlights_array
                    size = 64
                    value = @DEACTIVATE
                }
            }

            wchess_debug_add_halocheck_array_click = {
                set_variable = {wchess_play_state = @S_SELECTION}
                set_variable = {wchess_display_promote_pawn = 0}
            }

            wchess_debug_clean_halocheck_array_click = {
                log = "Clearing wchess_halochecks_array"
                clear_array = wchess_halochecks_array
                resize_array = {
                    array = wchess_halochecks_array
                    size = 64
                    value = @DEACTIVATE
                }
            }
        }
    }
}
